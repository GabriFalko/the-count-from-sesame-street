name: Post Image Notification to Slack

on:
  repository_dispatch:
    types: [new-image-completed]
  workflow_dispatch:

jobs:
  post-to-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Pull latest changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main

      - name: Prepare image info
        id: vars
        run: |
          IMAGE_NAME="${{ github.event.client_payload.image_name }}"
          FORMATTED_NAME=$(echo "$IMAGE_NAME" | awk '{print $NF}')
          PRETTY_DATE=$(date -u -d "${{ github.event.client_payload.timestamp }}" +"%B %d, %Y at %H:%M UTC")
          ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"
          REPO="${{ github.event.client_payload.repo }}"
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "formatted_name=$FORMATTED_NAME" >> $GITHUB_OUTPUT
          echo "pretty_date=$PRETTY_DATE" >> $GITHUB_OUTPUT
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT

      - name: Ensure image-count.txt exists
        run: |
          if [ ! -f image-count.txt ]; then
            touch image-count.txt
          fi

      - name: Calculate next image number and append new entry
        id: count
        run: |
          IMAGE_NUMBER=$(($(wc -l < image-count.txt) + 1))
          FORMATTED_NAME="${{ steps.vars.outputs.formatted_name }}"
          PRETTY_DATE="${{ steps.vars.outputs.pretty_date }}"
          echo "image_number=$IMAGE_NUMBER" >> $GITHUB_OUTPUT
          echo "$IMAGE_NUMBER, $FORMATTED_NAME, $PRETTY_DATE" >> image-count.txt

      - name: Commit and push updated image-count.txt
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add image ${{ steps.vars.outputs.formatted_name }} as #${{ steps.count.outputs.image_number }}"
          file_pattern: image-count.txt
          # Optionally, add your PAT if pushing to a protected repo:
          # token: ${{ secrets.GH_PAT }}
              
      - name: Compose Slack message
        id: slack
        run: |
          ISSUE_LINK="https://github.com/${REPO}/issues/${ISSUE_NUMBER}"
          MSG=$(cat <<EOF
*Name:* ${IMAGE_NAME}
*Number:* ${IMAGE_NUMBER}
*Issue:* <${ISSUE_LINK}|#${ISSUE_NUMBER}>
*Completed at:* ${PRETTY_DATE}
EOF
)
          echo "message=$MSG" >> $GITHUB_OUTPUT
        env:
          IMAGE_NAME: ${{ steps.vars.outputs.formatted_name }}
          IMAGE_NUMBER: ${{ steps.count.outputs.image_number }}
          ISSUE_NUMBER: ${{ steps.vars.outputs.issue_number }}
          PRETTY_DATE: ${{ steps.vars.outputs.pretty_date }}
          REPO: ${{ steps.vars.outputs.repo }}
    
      - name: Post to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Greetings! I am The Count. They call me the Count because I love to count ... things"}' \
            "$SLACK_WEBHOOK_URL"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"${{ steps.slack.outputs.message }}\"}" \
            "$SLACK_WEBHOOK_URL"
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Ah, Ah, Ah!"}' \
            "$SLACK_WEBHOOK_URL"
